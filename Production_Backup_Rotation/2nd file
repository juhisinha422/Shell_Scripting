# mkdir backups
# pwd : /home/ubuntu
# ./backup.sh
#  sudo ./backup.sh /data /backups
# date '+%Y-%m-%d-%H-%M-%S'
# sudo apt install zip
# sudo vi backup.sh

####### script ---- backup.sh=====================

#!/bin/bash

<< readme

This is a script for backup with 5 days rotation.

Usage:
./backup.sh <path to your source> <path to backup folder>
readme

function display_usage {
        echo "Usage: ./backup.sh <path to your source> <path to backup folder>"


}

if [ $# -eq 0 ]; then
        display_usage
fi

source_dir=$1
timestamp=$(date '+%Y-%m-%d-%H-%M-%S')
backup_dir=$2

function create_backup {

        #zip -r "${backup_dir}/backup_${timestamp}.zip" "${source_dir}"
        zip -r "${backup_dir}/backup_${timestamp}.zip" "${source_dir}" > /dev/null
        if [ $? -eq 0 ]; then

                echo "Backup generated successfully for ${timestamp}"
        fi
}

create_backup


########## commands-----------
# use sudo if permission denied comes
chmod 700 backup.sh
./backup.sh
sudo ./backup.sh /home/ubuntu/data /home/ubuntu/backups


output:
adding: home/ubuntu/data/ (stored 0%)
  adding: home/ubuntu/data/file2.txt (stored 0%)
  adding: home/ubuntu/data/file5.txt (stored 0%)
  adding: home/ubuntu/data/file4.txt (stored 0%)
  adding: home/ubuntu/data/file1.txt (stored 0%)
  adding: home/ubuntu/data/file3.txt (stored 0%)


# now to remove warnings (here adding ... that line) add below lines
zip -r "${backup_dir}/backup_${timestamp}.zip" "${source_dir}" > /dev/null

# cd backups
# ls
# files will be stored there
# cd backups
ls -t (will sort the commands with latest files)

backup_2025-05-09-17-17-50.zip  backup_2025-05-09-17-14-44.zip
backup_2025-05-09-17-17-47.zip  backup_2025-05-09-17-13-10.zip
backup_2025-05-09-17-16-00.zip  backup_2025-05-09-17-10-35.zip
backup_2025-05-09-17-15-12.zip

# so here lates files are 17, 17, 16, 15, 14 (latest 5 files)




